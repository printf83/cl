"use strict";import*as core from"./core.js";import label from"./label.js";import tag from"./tag.js";const defaultContainerOption={type:"ul",flush:!1,horizontal:null,label:null,icon:null,item:null},defaultItemOption={type:null,action:!1,value:null,color:null};export default class listgroup extends tag{constructor(...e){super(...e)}get data(){return super.data}set data(e){let t=null;(e=core.extend({},defaultContainerOption,e)).label&&(e.id=e.id||core.UUID(),t=new label({class:"form-label",for:e.id,label:e.label,icon:e.icon})),delete e.label,delete e.icon,!0===e.horizontal&&(e.horizontal="horizontal"),delete(e=core.merge(e,{tag:e.type,class:["list-group",e.flush?"list-group-flush":null,"ol"===e.type?"list-group-numbered":null,core.multiClass(e.horizontal,{format:"list-group-horizontal-$1",formatTrue:"list-group-horizontal"})],item:Array.isArray(e.item)?e.item:[e.item],elem:e.elem?e.elem:e.item.map((e=>{if("checkbox"===(e=core.extend({},defaultItemOption,e)).type||"radio"===e.type||"switch"===e.type){let t=core.merge(e,{tag:"input",marginEnd:2,marginStart:"switch"===e.type?0:null,class:"form-check-input",type:"switch"===e.type?"checkbox":e.type});delete t.color,e=core.merge(e,{tag:"label",class:["list-group-item","switch"===e.type?"form-switch":null,e.action?"list-group-item-action":null,e.color?`list-group-item-${e.color}`:null],"aria-current":e.active?"true":null,elem:[new tag(t),e.label]})}else e=core.merge(e,{tag:e.href?"a":e.click instanceof Function?"button":"li",class:["list-group-item",e.action||"a"===e.tag||"button"===e.tag?"list-group-item-action":null,e.color?`list-group-item-${e.color}`:null],"aria-current":e.active?"true":null});return delete e.type,delete e.action,delete e.color,new tag(e)}))})).item,delete e.type,delete e.flush,delete e.horizontal,super.data=t?{elem:[t,new tag(e)]}:e}}