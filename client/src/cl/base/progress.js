"use strict";import*as core from"./core.js";import div from"./div.js";const defaultContainerOption={item:null};export class container extends div{constructor(...e){super(...e)}get data(){return super.data}set data(e){e&&(e=core.extend({},defaultContainerOption,e),(e=core.merge(e,{class:"progress"})).item=e.item?Array.isArray(e.item)?e.item:[e.item]:null,e.elem=e.elem?e.elem:e.item?e.item.map((e=>e.hasOwnProperty("cl")?e:new bar(e))):null,delete e.item,super.data=e)}}const defaultBarOption={color:null,label:!1,stripe:!1,animated:!1,min:0,max:100,value:0};export class bar extends div{constructor(...e){super(...e)}get data(){return super.data}set data(e){if(e){(e=core.extend({},defaultBarOption,e)).value>e.max&&(e.value=e.max),e.value<e.min&&(e.value=e.min);let a=e.max-e.min>0?parseInt(e.value/(e.max-e.min)*100,10):0;delete(e=core.merge(e,{class:["progress-bar",e.stripe?"progress-bar-striped":null,e.animated?"progress-bar-animated":null],role:"progressbar","aria-valuenow":e.value,"aria-valuemin":e.min,"aria-valuemax":e.max,width:`${a}%`,elem:e.label?`${a}%`:" ",bgColor:e.bgColor||e.color,textBgColor:e.textBgColor||e.color})).color,delete e.max,delete e.min,delete e.animated,delete e.stripe,delete e.label,super.data=e}}}