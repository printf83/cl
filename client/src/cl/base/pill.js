"use strict";import css from"./css/pill.css";import*as core from"./core.js";import*as inputgroup from"./inputgroup.js";import div from"./div.js";import small from"./small.js";import tooltip from"./tooltip.js";import icon from"./icon.js";const defaultOption={icon:null,label:null,title:null,color:null,elem:null,weight:"sm",viewport:null};export default class pill extends div{constructor(...e){super(...e)}get data(){return super.data}set data(e){e=core.extend({},defaultOption,e);let l=core.getBaseIcon(e.icon);l&&(e.color=e.color||l.color,e.icon={icon:l.icon,type:l.type}),e.color=e.color||"primary",e.viewport&&null===e.elem&&(e.elem=[new small("d-inline d-sm-none","XS"),new small("d-none d-sm-inline d-md-none","SM"),new small("d-none d-md-inline d-lg-none","MD"),new small("d-none d-lg-inline d-xl-none","LG"),new small("d-none d-xl-inline d-xxl-none","XL"),new small("d-none d-xxl-inline","XXL")]),e=core.merge(e,{class:"cl-pill"});let o=new inputgroup.container({class:e.class,weight:e.weight,elem:[new inputgroup.text({border:!1,bgColor:e.color,textColor:e.color,bgOpacity:25,paddingX:2,paddingY:1,elem:e.icon?new icon(e.icon):e.title?new small(e.title):null}),new inputgroup.text({border:!1,bgColor:e.color,textBgColor:e.color,paddingX:2,paddingY:1,elem:e.elem||new small(e.label)})]});e.elem=e.icon&&e.title?new tooltip({type:"tooltip",placement:"top",msg:e.title,elem:o}):o,delete e.viewport,delete e.weight,delete e.icon,delete e.label,delete e.color,super.data=e}}