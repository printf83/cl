"use strict";import*as core from"./core.js";import tag from"./tag.js";import span from"./span.js";import icon from"./icon.js";function generate(e){if(e.elem)return e.elem;{let l=null,a=null,n=null;return e.icon&&!e.iconafter?l=new span({marginEnd:e.label&&!e.hidelabel?e.showlabel?`${e.showlabel}-2`:2:null,elem:new icon(e.icon)}):e.icon&&!0===e.iconafter&&(n=new span({marginStart:e.label&&!e.hidelabel?e.showlabel?`${e.showlabel}-2`:2:null,elem:new icon(e.icon)})),e.label&&(a=e.hidelabel?new span({class:"visually-hidden",elem:e.label}):e.icon&&e.showlabel?new span({display:["none",`${e.showlabel}-inline`],elem:e.label}):e.label),[l,a,n].filter(Boolean)}}const defaultOption={for:null,icon:null,label:null,showlabel:null,hidelabel:!1,iconafter:!1};export default class label extends tag{constructor(...e){super(...e)}get data(){return super.data}set data(e){if(e){let l=generate(e=core.extend({},defaultOption,e));delete e.icon,delete e.label,delete e.hidelabel,delete e.showlabel,delete e.iconafter,e.elem=l,e.for?(e.tag="label",super.data=e):super.data=e}}}